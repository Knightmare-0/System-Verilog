$date
    Jun 12, 2023  23:16:40
$end
$version
    TOOL:	xmsim	21.03-s001
$end
$timescale
    1 ns
$end

$scope module top $end
$var reg       1 !    clk $end

$scope module intf_ins $end
$var wire      1 "    clk  $end
$var reg       1 #    rst $end
$var reg       1 $    d $end
$var reg       1 %    t $end
$var reg       1 &    qsr $end
$var reg       1 '    qjk $end
$var reg       1 (    qd $end
$var reg       1 )    qt $end
$var reg       1 *    s $end
$var reg       1 +    r $end
$var reg       1 ,    j $end
$var reg       1 -    k $end

$scope clocking cb $end
$var reg       1 .    d $end
$var reg       1 /    t $end
$var reg       1 0    s $end
$var reg       1 1    r $end
$var reg       1 2    j $end
$var reg       1 3    k $end
$var reg       1 4    qsr $end
$var reg       1 5    qjk $end
$var reg       1 6    qd $end
$var reg       1 7    qt $end
$upscope $end

$upscope $end


$scope module dut_ins $end
$var wire      1 8    j  $end
$var wire      1 9    k  $end
$var wire      1 :    s  $end
$var wire      1 ;    r  $end
$var wire      1 <    d  $end
$var wire      1 =    t  $end
$var wire      1 >    rst  $end
$var wire      1 "    clk  $end
$var reg       1 ?    qjk $end
$var reg       1 @    qsr $end
$var reg       1 A    qd $end
$var reg       1 B    qt $end
$upscope $end

$upscope $end

$enddefinitions $end
$dumpvars
0!
0"
0#
x$
x%
x&
x'
x(
x)
x*
x+
x,
x-
x.
x/
x0
x1
x2
x3
x4
x5
x6
x7
x8
x9
x:
x;
x<
x=
0>
x?
x@
xA
xB
$end
#5
1!
1"
#10
0!
0"
